apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-secrets-operator
  namespace: argocd
spec:
  destination:
    namespace: external-secrets  # Target namespace for External Secrets Operator
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: external-secrets
    repoURL: https://charts.external-secrets.io  # External Secrets Helm chart repository
    targetRevision: 0.10.4  # Replace with tbhe desired version of External Secrets Operator
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: local-vault
  namespace: default
spec:
  provider:
    vault:
      server: "http://vault.default.svc:8200"
      path: "secret"
      version: "v2"
      auth:
        tokenSecretRef:
          name: vault-token
          key: token
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: default
type: Opaque
stringData:
  token: "root"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: my-external-secret  # Name of the ExternalSecret
  namespace: default        # Target namespace for the secret
spec:
  secretStoreRef:
    name: local-vault       # Reference to the SecretStore defined earlier
    kind: SecretStore       # Type of the SecretStore (can also be ClusterSecretStore)
  target:
    name: my-k8s-secret     # The name of the Kubernetes secret to create
    namespace: default      # Namespace where the Kubernetes secret should be created
  data:
    - secretKey: my-secret-key  # The key in Vault where the secret is stored
      remoteRef:
        key: my-secret     # Path in Vault where the secret is stored
        property: foo     # Specific property/key within the Vault secret to sync

